# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
position_max: 210
position_min = -3
endstop_pin: probe:z_virtual_endstop

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -42
y_offset: -5.5
z_offset: 1.56
speed: 5
samples: 2
sample_retract_dist: 8.0

[safe_z_home]
#home_xy_position: 117.5, 117.5
home_xy_position: 159.5, 113.0
z_hop: 10
z_hop_speed: 10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 34.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[bed_mesh]
speed: 120
horizontal_move_z: 5
# mesh_min: X_min, Y_min
mesh_min: 15, 15
# mesh_max: X_max, Y_max
mesh_max: 210, 210
# Bed Mesh Algorithm Options:
#
# 1. Lagrange (default) - Uses a polynomial interpolation. Efficient but limited to 6x6 probe points max.
# 2. Bicubic - More complex interpolation. Can handle up to 15x15 probe points.
# 3. Bilinear - Simple linear interpolation. Unlimited probe points.
#
# Factors to consider:
# - Lagrange is fastest but 6x6 limit may not capture enough detail.
# - Bicubic is more accurate but slower. 
# - Bilinear is simplest but may not model complex bed shapes as well.
#
# Choose algorithm based on your bed shape complexity and how many probe points you need.
# Start with Lagrange if 6x6 is enough, otherwise try Bicubic. Bilinear is last resort.
algorithm: bicubic
probe_count: 9,9



[virtual_sdcard]
path: ~/printer_data/gcodes/

[pause_resume]

[display_status]

